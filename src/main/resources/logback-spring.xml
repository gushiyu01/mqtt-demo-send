<?xml version="1.0" encoding="UTF-8"?>
<!--
scan：当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。
scanPeriod：设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒当scan为true时，此属性生效。默认的时间间隔为1分钟。
debug：当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。
-->
<configuration>
    <!-- 文件输出格式 -->
    <!-- magenta:洋红 -->
    <!-- boldMagenta:粗红-->
    <!-- cyan:青色 -->
    <!-- white:白色 -->
    <!-- magenta:洋红 -->
    <!--
          日志输出格式：
              %d表示日期时间，
              %thread表示线程名，
              %-5level：级别从左显示5个字符宽度
              %logger{50} 表示logger名字最长50个字符，否则按照句点分割。
              %msg：日志消息，
              %n是换行符
          -->
    <property name="PATTERN"
              value="%-12(%d{yyyy-MM-dd HH:mm:ss.SSS}) | %cyan([UserId:%X{requestId}])|-%-5level [%thread] %c [%L] -| %msg%n"/>
    <!--文件路径 -->
    <!-- 定义日志的根目录 -->
    <property name="FILE_PATH" value="logs/"/>

    <logger name="com.example" level="debug"/>
    <logger name="org.springframework.web" level="info"/>
    <logger name="org.ibatis" level="DEBUG"/>
    <logger name="druid.sql" level="DEBUG"/>
    <logger name="org.springframework.jdbc" level="DEBUG"/>

    <!-- 控制台打印 -->
    <appender name="CONSOLE" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <pattern>${PATTERN}</pattern>
        </encoder>
    </appender>
    <!-- 每天产生一个文件 -->
    <appender name="ALLFILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 文件路径 -->
        <file>${FILE_PATH}/logs.log</file>
        <rollingPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 文件名称 -->
            <fileNamePattern>${FILE_PATH}/logs.%d{yyyy-MM-dd}-%i.log
            </fileNamePattern>
            <maxFileSize>10MB</maxFileSize>
            <maxHistory>100</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>${PATTERN}</pattern>
        </layout>
    </appender>
    <appender name="ERRORFILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 文件路径 -->
        <file>${FILE_PATH}/logs_error.log</file>
        <rollingPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 文件名称 -->
            <fileNamePattern>${FILE_PATH}/logs_error.%d{yyyy-MM-dd}-%i.log
            </fileNamePattern>
            <maxFileSize>10MB</maxFileSize>
            <maxHistory>100</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <append>true</append>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>${PATTERN}</pattern>
        </layout>
        <!-- 此日志文件只记录error级别的 -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>ERROR</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>
    <!--
       当发生滚动时，决定 RollingFileAppender 的行为，涉及文件移动和重命名
       TimeBasedRollingPolicy： 最常用的滚动策略，它根据时间来制定滚动策略，既负责滚动也负责出发滚动。
       -->
    <appender name="WARNFILE"
              class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- 文件路径 -->
        <file>${FILE_PATH}/logs_warn.log</file>
        <!--
            当日志文件超过maxFileSize指定的大小是，根据上面提到的%i进行日志文件滚动
            注意此处配置SizeBasedTriggeringPolicy是无法实现按文件大小进行滚动的，
            必须配置timeBasedFileNamingAndTriggeringPolicy
        -->

        <rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
            <!-- 文件名称 -->
            <fileNamePattern>${FILE_PATH}/logs_warn.%d{yyyy-MM-dd}-%i.log
            </fileNamePattern>
            <!--
                滚动时产生的文件的存放位置及文件名称 %d{yyyy-MM-dd}：按天进行日志滚动
                %i：当文件大小超过maxFileSize时，按照i进行文件滚动
            -->
            <maxFileSize>10MB</maxFileSize>
            <!--
                可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件。假设设置每天滚动，
                且maxHistory是365，则只保存最近365天的文件，删除之前的旧文件。注意，删除旧文件是，
                那些为了归档而创建的目录也会被删除。
            -->
            <maxHistory>100</maxHistory>
            <totalSizeCap>20GB</totalSizeCap>
        </rollingPolicy>
        <append>true</append>
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>${PATTERN}</pattern>
        </layout>
        <!-- 此日志文件记录warn级别以及以上 -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
        </filter>
    </appender>
    <root level="INFO">
        <appender-ref ref="ALLFILE"/>
        <appender-ref ref="CONSOLE"/>
        <appender-ref ref="ERRORFILE"/>
        <appender-ref ref="WARNFILE"/>
    </root>

    <jmxConfigurator/>
</configuration>